require('dotenv').config();
const oracledb = require('oracledb');

async function getConnection() {
  try {
    return await oracledb.getConnection({
      user: process.env.DB_USER,
      password: process.env.DB_PASSWORD,
      connectString: process.env.DB_CONNECT
    });
  } catch (err) {
    console.error('Erro ao conectar ao OracleDB:', err);
    throw err;
  }
}

async function initializeDB() {
  const connection = await getConnection();
  try {
    await connection.execute(`
      CREATE TABLE usuarios (
        id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        nome VARCHAR2(100),
        idade NUMBER,
        email VARCHAR2(100)
      )
    `);
    console.log('Tabela "usuarios" verificada/criada.');
  } catch (err) {
    if (err.errorNum === 955) {
      console.log('A tabela "usuarios" jÃ¡ existe.');
    } else {
      console.error('Erro ao criar/verificar tabela:', err);
    }
  } finally {
    await connection.close();
  }
}

// Inicializa a tabela ao iniciar
initializeDB();

module.exports = { getConnection };
/*
require('dotenv').config();
const sqlite3 = require('sqlite3').verbose();

const db = new sqlite3.Database(process.env.SQLITE_FILE, (err) => {
  if (err) {
    console.error('Erro ao conectar com SQLite:', err.message);
    return;
  }
  console.log(`Conectado ao SQLite: ${process.env.SQLITE_FILE}`);
});

db.run(`
  CREATE TABLE IF NOT EXISTS usuarios (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT,
    idade INTEGER,
    email TEXT
  )
`);

module.exports = db;
*/